const { ovlcmd } = require('../lib/ovlcmd');
const { MyNeoFunctions, TeamFunctions, BlueLockFunctions } = require("../database/myneo_lineup_team");

// === ü™™ MYNEO üî∑ ===
ovlcmd(
  {
    nom_cmd: "myneoüî∑",
    classe: "MyNeoüî∑",
    react: "ü™™",
    desc: "Afficher ou modifier les donn√©es NEO d'un joueur.",
  },
  async (ms_org, ovl, cmd_options) => {
    const { arg, auteurMessage, superUser, repondre } = cmd_options;
    let userId = auteurMessage;
    if (arg.length >= 1) {
      userId = (arg[0]?.includes("@") && `${arg[0].replace("@", "")}@lid`);
      if (!userId) return repondre("‚ö†Ô∏è Mentionne un utilisateur.");
    }

    try {
      let data = await MyNeoFunctions.getUserData(userId);
      if (!data) return repondre("‚ö†Ô∏è Aucune donn√©e trouv√©e pour cet utilisateur.");

      if (arg.length <= 1) {
        const myn = `*üéÆNEOVERSEüî∑ ACCOUNTü™™* ‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
üë§User: ${data.users}
üì≥T√©l√©phone: ${data.tel}
üéÆPoints de jeux: ${data.points_jeu}
üî∑NEOcoins: ${data.nc}üî∑
üî∂NEOpoints: ${data.np}üî∂
üé´Coupons: ${data.coupons}üé´
üéÅGift Box: ${data.gift_box}üéÅ
‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë
*üéÆMY GAMES* ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üåÄAll Stars: ${data.all_stars}
‚öΩBlue Lock: ${data.blue_lock}
üí†√âlysium: ${data.elysium}
‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë
üî∑NEOüî∑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê`;

        return await ovl.sendMessage(ms_org, {
          image: { url: "https://files.catbox.moe/mgmrkp.jpg" },
          caption: myn
        }, { quoted: cmd_options.ms });
      }

      if (!superUser) return repondre("‚ö†Ô∏è Seuls les membres Premium peuvent actualiser un joueur.");

      const modifiables = [
        "users", "tel", "points_jeu", "nc", "np", "coupons", "gift_box",
        "all_stars", "blue_lock", "elysium"
      ];

      let updates = {};
      for (let i = 1; i < arg.length;) {
        const field = arg[i]?.toLowerCase();
        const op = arg[i + 1];
        if (!modifiables.includes(field) || !["=", "+", "-"].includes(op)) {
          i++;
          continue;
        }
        const isNumeric = ["points_jeu", "nc", "np", "coupons", "gift_box"].includes(field);
        let value;

        if (op === "=" && !isNumeric) {
          let valParts = [], j = i + 2;
          while (j < arg.length && !modifiables.includes(arg[j].toLowerCase())) valParts.push(arg[j++]);
          value = valParts.join(" "); i = j;
        } else {
          value = arg[i + 2]; i += 3;
        }

        if (value !== undefined) {
          if (isNumeric) {
            const val = parseInt(value);
            if (!isNaN(val)) {
              if (op === "=") updates[field] = val;
              else if (op === "+") updates[field] = data[field] + val;
              else if (op === "-") updates[field] = data[field] - val;
            }
          } else if (op === "=") updates[field] = value;
        }
      }

      if (Object.keys(updates).length > 0) {
        const message = await MyNeoFunctions.updateUser(userId, updates);
        return repondre(message);
      } else {
        return repondre("‚ö†Ô∏è Format incorrect ou champ non valide. Exemple : +myNeo @user nc + 200 user = Damian K√èNGS‚öúÔ∏è");
      }

    } catch (err) {
      console.error("‚ùå Erreur ligne myNeo:", err);
      return repondre("‚ùå Une erreur est survenue.");
    }
  }
);

// === ‚öΩ TEAM ===
ovlcmd(
  {
    nom_cmd: "team‚öΩ",
    classe: "MyNeoüî∑",
    react: "‚öΩ",
    desc: "Afficher ou modifier la team d‚Äôun joueur.",
  },
  async (ms_org, ovl, cmd_options) => {
    const { arg, auteurMessage, superUser, repondre } = cmd_options;
    let userId = auteurMessage;
    if (arg.length >= 1) {
      userId = (arg[0]?.includes("@") && `${arg[0].replace("@", "")}@lid`);
      if (!userId) return repondre("‚ö†Ô∏è Mentionne un utilisateur.");
    }

    try {
      let data = await TeamFunctions.getUserData(userId);
      if (!data) return repondre("‚ö†Ô∏è Aucune donn√©e trouv√©e pour cet utilisateur.");

      if (arg.length <= 1) {
        const fiche = `‚ñë‚ñë *üë§PLAYERü•Ö‚öΩ*: ${data.users}
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
*üõ°Ô∏èTeam:* ${data.team}
*‚¨ÜÔ∏èPoints de jeu:* ${data.points_jeu} XP
*üéñÔ∏èRang:* ${data.rank}
*üí∞Argent:* ${data.argent} üí∂
*üèÜPuissance d'√©quipe:* ${data.puissance}‚è´
*üéñÔ∏èClassement d'√©quipe:* ${data.classement}

‚ñë‚ñë *üìäRECORDS‚öΩü•Ö*
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
‚öΩWins: ${data.wins}   ‚ùåLoss: ${data.loss}   ü´±üèº‚Äçü´≤üèΩDraws: ${data.draws}
üèÜChampionnats: ${data.championnats}    üèÜNEL: ${data.nel}

ü•Ö +Lineup‚öΩ: ‚ö†Ô∏èpour voir la formation
üåç+player‚öΩ: ‚ö†Ô∏èpour voir son Hero
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî 
         ‚öΩüî∑ *BLUE LOCK NEOü•Ö*‚ñ±‚ñ±‚ñ±`;

        return await ovl.sendMessage(ms_org, {
          image: { url: "https://files.catbox.moe/2patx3.jpg" },
          caption: fiche,
        }, { quoted: cmd_options.ms });
      }

      if (!superUser) return repondre("‚ö†Ô∏è Seuls les membres de la NS peuvent actualiser une team.");

      const modifiables = [
        "users", "team", "points_jeu", "rank",
        "argent", "puissance", "classement", "wins", "loss", "draws", "championnats", "nel"
      ];

      let updates = {};
      for (let i = 1; i < arg.length;) {
        const field = arg[i]?.toLowerCase();
        const op = arg[i + 1];
        if (!modifiables.includes(field) || !["=", "+", "-"].includes(op)) { i++; continue; }

        const isNumeric = [
          "points_jeu", "argent", "puissance",
          "wins", "loss", "draws", "championnats", "nel"
        ].includes(field);

        let value;
        if (op === "=" && !isNumeric) {
          let valParts = [], j = i + 2;
          while (j < arg.length && !modifiables.includes(arg[j].toLowerCase())) valParts.push(arg[j++]);
          value = valParts.join(" "); i = j;
        } else {
          value = arg[i + 2]; i += 3;
        }

        if (value !== undefined) {
          if (isNumeric) {
            const val = parseInt(value);
            if (!isNaN(val)) {
              if (op === "=") updates[field] = val;
              else if (op === "+") updates[field] = data[field] + val;
              else if (op === "-") updates[field] = data[field] - val;
            }
          } else if (op === "=") updates[field] = value;
        }
      }

      if (Object.keys(updates).length > 0) {
        const message = await TeamFunctions.updateUser(userId, updates);
        return repondre(message);
      } else {
        return repondre("‚ö†Ô∏è Format incorrect ou champ non valide. Exemple : +team @user wins + 2 team = BlueLock Elite");
      }

    } catch (err) {
      console.error("‚ùå Erreur ligne team:", err);
      return repondre("‚ùå Une erreur est survenue.");
    }
  }
);

// === üìã LINEUP ===
ovlcmd(
  {
    nom_cmd: "lineup‚öΩ",
    classe: "MyNeoüî∑",
    react: "üìã",
    desc: "Afficher ou modifier l'√©quipe du joueur.",
  },
  async (ms_org, ovl, cmd_options) => {
    const { arg, repondre, auteurMessage } = cmd_options;
    const userId = (arg[0]?.includes("@") && `${arg[0].replace("@", "")}@lid`) || auteurMessage;

    const data = await BlueLockFunctions.getUserData(userId);
    if (!data) return repondre("‚ö†Ô∏è Joueur introuvable.");

    if (arg.length <= 1) {
      await ovl.sendMessage(ms_org, {
        video: { url: "https://files.catbox.moe/z64kuq.mp4" },
        caption: "",
        gifPlayback: true
      }, { quoted: cmd_options.ms });

      const lineup = `‚ñë‚ñë *üë•SQUAD‚öΩü•Ö*: ${data.nom}
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñ±‚ñ±‚ñ±‚ñ±
1  üë§(AG) ${data.joueur1} : ${data.stat1}%ü´Ä
2  üë§(AC) ${data.joueur2} : ${data.stat2}%ü´Ä
3  üë§(AD) ${data.joueur3} : ${data.stat3}%ü´Ä
4  üë§(MG) ${data.joueur4} : ${data.stat4}%ü´Ä
5  üë§(MC) ${data.joueur5} : ${data.stat5}%ü´Ä
6  üë§(MD) ${data.joueur6} : ${data.stat6}%ü´Ä
7  üë§(DG) ${data.joueur7} : ${data.stat7}%ü´Ä
8  üë§(DC) ${data.joueur8} : ${data.stat8}%ü´Ä
9  üë§(DD) ${data.joueur9} : ${data.stat9}%ü´Ä
10 üë§(GB) ${data.joueur10} : ${data.stat10}%ü´Ä
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñ±‚ñ±‚ñ±‚ñ±
*üî∑BENCHü•Ö*:
11 üë§${data.joueur11}
12 üë§${data.joueur12}
13 üë§${data.joueur13}
14 üë§${data.joueur14}
15 üë§${data.joueur15}

‚öΩüî∑*BLUE LOCK NEOü•Ö*‚ñ±‚ñ±‚ñ±`;

      return await ovl.sendMessage(ms_org, {
        image: { url: "https://files.catbox.moe/p94q3m.jpg" },
        caption: lineup
      }, { quoted: cmd_options.ms });
    }

    const updates = {};
    for (let i = 0; i < arg.length; i += 3) {
      if (/^j\d+$/.test(arg[i]) && arg[i + 1] === "=") {
        const index = parseInt(arg[i].slice(1));
        if (index >= 1 && index <= 15) {
          updates[`joueur${index}`] = arg[i + 2];
        }
      }
    }

    if (Object.keys(updates).length > 0) {
      const message = await BlueLockFunctions.updatePlayers(userId, updates);
      return repondre(message);
    } else {
      return repondre("‚ö†Ô∏è Format incorrect. Utilise: +lineup j1 = Nom j2 = Nom...");
    }
  }
);
